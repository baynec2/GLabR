output = data %>%
dplyr::mutate(time_difference = datetime - start_time,
time_difference = as.numeric(time_difference,units = "hours")) %>%
dplyr::select(time_hr = time_difference, datetime,temperature, dplyr::everything()) %>%
tidyr::pivot_longer(4:length(.),names_to = "well",values_to = paste0("OD",wavelength))
View(output)
p1 = output %>%
ggplot(aes(time_hr,od600))+
geom_point()+
geom_line(aes(group = well))
p1 = output %>%
ggplot2::ggplot(aes(time_hr,od600))+
geom_point()+
geom_line(aes(group = well))
library(ggplot2)
p1 = output %>%
ggplot(aes(time_hr,od600))+
geom_point()+
geom_line(aes(group = well))
p1
p1 = output %>%
ggplot(aes(time_hr,OD600))+
geom_point()+
geom_line(aes(group = well))
p1
#Necessary to specify this encoding because of the degree sign special character
#Otherwise, reading it in will error.
data = read_csv(input,skip = 9,fileEncoding = "ISO-8859-1") %>%
dplyr::rename(unix_time =1, temperature = 2) %>%
dplyr::mutate(datetime = lubridate::as_datetime(unix_time)) %>%
select(datetime, temperature, dplyr::everything(), -unix_time)
#Necessary to specify this encoding because of the degree sign special character
#Otherwise, reading it in will error.
data = readr::read_csv(input,skip = 9,fileEncoding = "ISO-8859-1") %>%
dplyr::rename(unix_time =1, temperature = 2) %>%
dplyr::mutate(datetime = lubridate::as_datetime(unix_time)) %>%
select(datetime, temperature, dplyr::everything(), -unix_time)
#Necessary to specify this encoding because of the degree sign special character
#Otherwise, reading it in will error.
data = read.csv(input,skip = 9,fileEncoding = "ISO-8859-1") %>%
dplyr::rename(unix_time =1, temperature = 2) %>%
dplyr::mutate(datetime = lubridate::as_datetime(unix_time)) %>%
select(datetime, temperature, dplyr::everything(), -unix_time)
#Defining the start time as first value in datetime column/
start_time = data$datetime[[1]]
#Calcultating amount of time past and tidying the data.
output = data %>%
dplyr::mutate(time_difference = datetime - start_time,
time_difference = as.numeric(time_difference,units = "hours")) %>%
dplyr::select(time_hr = time_difference, datetime,temperature, dplyr::everything()) %>%
tidyr::pivot_longer(4:length(.),names_to = "well",values_to = paste0("od",wavelength_nm))
wavelength_nm =  600
data = read.csv(input,skip = 9,fileEncoding = "ISO-8859-1") %>%
dplyr::rename(unix_time =1, temperature = 2) %>%
dplyr::mutate(datetime = lubridate::as_datetime(unix_time)) %>%
select(datetime, temperature, dplyr::everything(), -unix_time)
#Defining the start time as first value in datetime column/
start_time = data$datetime[[1]]
#Calcultating amount of time past and tidying the data.
output = data %>%
dplyr::mutate(time_difference = datetime - start_time,
time_difference = as.numeric(time_difference,units = "hours")) %>%
dplyr::select(time_hr = time_difference, datetime,temperature, dplyr::everything()) %>%
tidyr::pivot_longer(4:length(.),names_to = "well",values_to = paste0("od",wavelength_nm))
class(output)
devtools::document()
library(GLabR)
parsed_data = parse_stratus("tests/testdata/parse_stratus/stratus_data_export.csv")
head(parsed_data)
ggplot2::theme_set(ggprism::theme_prism())
library(tid yverse)
library(tidyverse)
data = read_csv("data/qiagen hMw DNA extraction strep.csv")
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv")
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 1)
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 3)
View(data)
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2)
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(6:length(.))
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2)
View(data)
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.))
View(data)
p1 = data %>%
ggplot(aes(name,value))+
geom_line()+
facet_wrap(~`Sample Name`)
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`)
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) %>%
na.omit()
p1
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit()
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`)
p1
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) +
xlab("Wavelength")
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) +
xlab("Wavelength")
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_grid(~`Sample Name`) +
xlab("Wavelength")
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_grid(`Sample Name`~.) +
xlab("Wavelength")
p1
p1
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) +
xlab("Wavelength")
p1
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2)
View(data)
View(data)
data = read_delim("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2)
View(data)
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit()
View(data)
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) +
xlab("Wavelength")
p1
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit() %>%
filter(`Sample Name` != "BLANK 1")
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit() %>%
filter(`Sample Name` != "BLANK 1")
p1 = data %>%
ggplot(aes(as.numeric(name),value))+
geom_line()+
facet_wrap(~`Sample Name`) +
xlab("Wavelength")
p1
filepath = "data/qiagen hMw DNA extraction strep.tsv"
data = readr::read_tsv(filepath)
View(data)
nrow = nrow(readr::read_tsv(filepath))
col = readr::read_tsv(filepath)
View(col)
nsamples = grepl(".*Absorbance.*"col)
nsamples = grepl(".*Absorbance.*",col)
col = readr::read_tsv(filepath) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
View(col)
nsample = sum(col$check)
nrow = nrow(col$check)
nrow/nsample
nrow = nrow(col$check)
nrow = nrow(col)
nrow/nsample
col = readr::read_tsv(filepath,col_names = "col") %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
nrow/nsample
indexes = 1:nsample * (row_per_sample + 1)
row_per_sample = nrow/nsample
indexes = 1:nsample * (row_per_sample + 1)
sample_names = col[indexes,]
View(sample_names)
indexes = 1:nsample * (row_per_sample )
sample_names = col[indexes,]
indexes = 1:nsample * row_per_sample + 1
sample_names = col[indexes,]
indexes = 1:(nsample-1) * row_per_sample + 1
sample_names = col[indexes,]
sample_names = col[indexes,1]
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =   indexes -1
data_end =  (indexes - 1)[-1]
data_end =  c((indexes - 1)[-1],nrow)
indexes = 1:(nsample-1) * row_per_sample + 1
sample_names = col[indexes,1] %>%
pull()
indexes
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  c((indexes - 1)[-1],nrow)
map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = n_max = data_end))
map2_df(data_start,data_end,~readr::read_tsv(filepath,skip =data_start, n_max = data_end))
map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = data_start, n_max = data_end))
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = data_start, n_max = data_end))
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y))
View(out)
test = col[data_start[[1]],data_end[[1]]]
test = col[data_start[[1]]:data_end[[1]],]
View(test)
test = col[data_start[[2]]:data_end[[2]],]
test = col[data_start[[3]]:data_end[[3]],]
test = read_csv(filepath,skip = data_start,data_end = data_end)
test = read_csv(filepath,skip = data_start,n_max = data_end)
test = read_csv(filepath,skip = data_start[[1]],n_max = data_end[[1]])
View(test)
test = read_csv(filepath,skip = data_start[[1]],n_max = data_end[[1]],col_names = c("wavelength","value"))
View(test)
test = read_csv(filepath,skip = data_start[[1]]+1,n_max = data_end[[1]],col_names = c("wavelength","value"))
View(test)
test = read_delim(filepath,skip = data_start[[1]]+1,n_max = data_end[[1]],col_names = c("wavelength","value"))
View(test)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
data_start = indexes + 15
data_end =  c((indexes - 1)[-1],nrow)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
test = read_delim(filepath,skip = data_start[[1]],n_max = data_end[[1]],col_names = c("wavelength","value"))
test = read_delim(filepath,skip = data_start[[2]],n_max = data_end[[2]],col_names = c("wavelength","value"))
View(test)
data_start = indexes + 14
data_end =  c((indexes - 1)[-1],nrow)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
test = read_delim(filepath,skip = data_start[[2]],n_max = data_end[[2]],col_names = c("wavelength","value"))
View(test)
test = col[data_start[[1]:data_end[[1]],]
test = col[data_start[[1]:data_end[[1]],]
test = col[data_start[[1]]:data_end[[1]],]
test = col[data_start[[2]]:data_end[[2]],]
test = col[data_start[[3]]:data_end[[3]],]
test = col[data_start[[4]]:data_end[[4]],]
test = col[data_start[[6]]:data_end[[6]],]
test = col[data_start[[7]]:data_end[[7]],]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
View(out)
data_start = data_start[[1]]
data_end = data_end[[1]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
View(out)
parse_nanodrop = function(filepath)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = "col") %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  c((indexes - 1)[-1],nrow)
data_start = data_start[[1]]
data_end = data_end[[1]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
test = col[data_start[[7]]:data_end[[7]],]
View(out)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
View(out)
data_end =  1:nsamples * 261
data_start = data_start[[1]]
data_end = data_end[[1]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
data_start = indexes + 14
data_end =  1:nsamples * 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
data_start = data_start[[2]]
data_end = data_end[[2]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
data_end = data_end[[2]]
data_end =  (1:nsamples)* 261
data_start = data_start[[2]]
data_start = indexes + 14
data_end =  (1:nsamples)* 261
data_start = data_start[[2]]
data_end = data_end[[2]]
data_end =  (1:nsample)* 261
data_start = data_start[[2]]
data_end = data_end[[2]]
data_start = data_start[[2]]
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  (1:nsample)* 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
data_start = data_start[[2]]
data_end = data_end[[2]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
View(out)
col = readr::read_tsv(filepath,col_names = c("col","value")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
View(col)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
View(out)
data_start = indexes + 14
data_end =  (1:nsample)* 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
test = readr::read_delim(filepath,skip = 290, n_max = 522,col_names = c("wavelength","value")))
test = readr::read_delim(filepath,skip = 290, n_max = 522,col_names = c("wavelength","value"))
View(test)
data_start = indexes + 15
data_end =  (1:nsample)* 261
test = readr::read_delim(filepath,skip = 291, n_max = 522,col_names = c("wavelength","value"))
275-15
data_start = indexes + 15
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
parse_nanodrop = function(filepath)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 15
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),delim = " "))
test = readr::read_delim(filepath,skip = 291, n_max = 522,col_names = c("wavelength","value"))
test = read_delim(filepath,skip = data_start[[2]],n_max = data_end[[2]],col_names = c("wavelength","value"))
nsamples = grepl(".*Absorbance.*",col)
View(out)
View(out)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
data_start = indexes + 15
data_end =  (1:nsample)* 275
data_end
nrow
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn",))
View(out)
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn"))
test = readr::read_delim(filepath,skip = 290, n_max = 550,col_names = c("wavelength","value"))
data_start = indexes + 15
test = readr::read_delim(filepath,skip = 291, n_max = 550,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 550,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 260,col_names = c("wavelength","value"))
out  = map_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
test = readr::read_delim(filepath,skip = 291, n_max = 260,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 261,col_names = c("wavelength","value"))
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
View(out)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
data_start = indexes + 13
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 15
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 15
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 13
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
test = readr::read_delim(filepath,skip = 14, n_max = 275,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 14, n_max = 260,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 14, n_max = 261,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 289, n_max = 261,col_names = c("wavelength","value"))
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
test = readr::read_delim(filepath,skip = 14, n_max = 261,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 289, n_max = 261,col_names = c("wavelength","value"))
indexes = c(1:(nsample-1) * row_per_sample + 1)
data_start = c(1,indexes + 15)
indexes = c(1:(nsample-1) * row_per_sample)
sample_names = col[indexes,1] %>%
pull()
data_start = c(1,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(15,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
data_start = c(14,indexes + 14)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 16)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_tsvfilepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv")
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8" )
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8")
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8")
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = 'ISO-8859-1'))
GLabR::parse_stratus
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",fileEncoding = "ISO-8859-1")
View(sum)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding="UTF-8")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding="GBK")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",check.names = F)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",check.names = F)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 1)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",skip = 1)
View(sum)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read_.sv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",fileEncoding = "UTF-16")
View(sum)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale =locale("UTF-16"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale("UTF-16"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16"))
View(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16"))
View(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
View(sum)
DT::datatable(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
DT::datatable(sum)
DT = DT::datatable(sum)
DT
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7) %>% as.data.frame()
DT = DT::datatable(sum)
DT
sum
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
sum
