data_start = indexes + 14
data_end =  1:nsamples * 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
data_start = data_start[[2]]
data_end = data_end[[2]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
data_end = data_end[[2]]
data_end =  (1:nsamples)* 261
data_start = data_start[[2]]
data_start = indexes + 14
data_end =  (1:nsamples)* 261
data_start = data_start[[2]]
data_end = data_end[[2]]
data_end =  (1:nsample)* 261
data_start = data_start[[2]]
data_end = data_end[[2]]
data_start = data_start[[2]]
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  (1:nsample)* 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
data_start = data_start[[2]]
data_end = data_end[[2]]
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x-1, n_max = .y,col_names = c("wavelength","value")))
View(out)
col = readr::read_tsv(filepath,col_names = c("col","value")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
View(col)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
View(out)
data_start = indexes + 14
data_end =  (1:nsample)* 261
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
test = readr::read_delim(filepath,skip = 290, n_max = 522,col_names = c("wavelength","value")))
test = readr::read_delim(filepath,skip = 290, n_max = 522,col_names = c("wavelength","value"))
View(test)
data_start = indexes + 15
data_end =  (1:nsample)* 261
test = readr::read_delim(filepath,skip = 291, n_max = 522,col_names = c("wavelength","value"))
275-15
data_start = indexes + 15
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),delim = " "))
View(out)
parse_nanodrop = function(filepath)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 15
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),delim = " "))
test = readr::read_delim(filepath,skip = 291, n_max = 522,col_names = c("wavelength","value"))
test = read_delim(filepath,skip = data_start[[2]],n_max = data_end[[2]],col_names = c("wavelength","value"))
nsamples = grepl(".*Absorbance.*",col)
View(out)
View(out)
out  = map2_df(data_start,data_end,~readr::read_delim(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
data_start = indexes + 15
data_end =  (1:nsample)* 275
data_end
nrow
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value")))
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
data_end =  (1:nsample)* 275
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn",))
View(out)
out  = map2_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = .y,col_names = c("wavelength","value"),col_types = "cn"))
test = readr::read_delim(filepath,skip = 290, n_max = 550,col_names = c("wavelength","value"))
data_start = indexes + 15
test = readr::read_delim(filepath,skip = 291, n_max = 550,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 550,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 260,col_names = c("wavelength","value"))
out  = map_df(data_start,data_end,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
test = readr::read_delim(filepath,skip = 291, n_max = 260,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 291, n_max = 261,col_names = c("wavelength","value"))
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
View(out)
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
select(col = 1) %>%
mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
data_start = indexes + 13
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 15
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 15
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = indexes + 13
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
test = readr::read_delim(filepath,skip = 14, n_max = 275,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 14, n_max = 260,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 14, n_max = 261,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 289, n_max = 261,col_names = c("wavelength","value"))
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
test = readr::read_delim(filepath,skip = 14, n_max = 261,col_names = c("wavelength","value"))
test = readr::read_delim(filepath,skip = 289, n_max = 261,col_names = c("wavelength","value"))
indexes = c(1:(nsample-1) * row_per_sample + 1)
data_start = c(1,indexes + 15)
indexes = c(1:(nsample-1) * row_per_sample)
sample_names = col[indexes,1] %>%
pull()
data_start = c(1,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(15,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
data_start = c(14,indexes + 14)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 16)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
data_start = c(14,indexes + 15)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_delim(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_tsvfilepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv")
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8" )
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8")
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",encoding ="UTF-8")
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = 'ISO-8859-1'))
GLabR::parse_stratus
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",fileEncoding = "ISO-8859-1")
View(sum)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding="UTF-8")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding="GBK")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",check.names = F)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",check.names = F)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 1)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",skip = 2)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",skip = 1)
View(sum)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read_.sv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",encoding = "UTF-16")
sum = read.csv("data/qiagen hMw DNA extraction strep.csv",fileEncoding = "UTF-16")
View(sum)
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale =locale("UTF-16"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale("UTF-16"))
sum = read_csv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16"))
View(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16"))
View(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
View(sum)
DT::datatable(sum)
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
DT::datatable(sum)
DT = DT::datatable(sum)
DT
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7) %>% as.data.frame()
DT = DT::datatable(sum)
DT
sum
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
sum
M
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col))
library(tidyverse)
ggplot2::theme_set(ggprism::theme_prism())
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit() %>%
filter(`Sample Name` != "BLANK 1")
library(tidyverse)
ggplot2::theme_set(ggprism::theme_prism())
data = read_tsv("data/qiagen hMw DNA extraction strep_table.tsv",skip = 2) %>%
pivot_longer(8:length(.)) %>%
na.omit() %>%
filter(`Sample Name` != "BLANK 1")
filepath = "data/qiagen hMw DNA extraction strep.tsv"
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
row_per_sample = nrow/nsample
indexes = c(1:(nsample-1) * row_per_sample)
sample_names = col[indexes,1] %>%
pull()
data_start = c(14,indexes + 15)
out  = map_df(data_start,~readr::read_tsvfilepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_tsvfilepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn")
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
View(col)
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col))
nsample = sum(col$check)
nrow = nrow(col)
sample_names = col[indexes,1] %>%
pull()
#Determining how many samples there are
nsample = sum(col$check)
#Determining how many rows there are
nrow = nrow(col)
#Determining how many rows per sample there are
row_per_sample = nrow/nsample
indexes = c(1:(nsample-1) * row_per_sample)
sample_names = col[indexes,1] %>%
pull()
indexes = c(1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
sample_names = col[indexes,1] %>%
pull()
data_start = indexes + 13
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn")
View(out)
View(out)
data_start = indexes + 13
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn")
View(out)
View(out)
#Determining when the data actually starts, 13 rows down from sample name
data_start = indexes + 14
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn")
#Reading in data
col = readr::read_tsv(filepath,col_names = c("col")) %>%
#Reading in data
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col),
start = grepl("A280.*",col))
View(col)
#Reading in data
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col),
start = grepl("220.0.*",col))
View(col)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn")
View(out)
View(out)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = row_per_sample - 14,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
View(col)
t = readr::read_tsv(filepath,skip = 15, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
t = readr::read_tsv(filepath,skip = 15, n_max = 260,col_names = c("wavelength","value"),col_types = "cn")
View(t)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start - 1)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - 1
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 260,col_names = c("wavelength","value"),col_types = "cn"))
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
problems()
colnames()
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - c(1,0,0,0,0,0)
t = readr::read_tsv(filepath,skip = 15, n_max = 260,col_names = c("wavelength","value"),col_types = "cn")
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - c(1,-1,-2,-3,-4,-5)
t = readr::read_tsv(filepath,skip = 15, n_max = 260,col_names = c("wavelength","value"),col_types = "cn")
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - c(1,-1,-2,-3,-4,-5)
t = readr::read_tsv(filepath,skip = 15, n_max = 260,col_names = c("wavelength","value"),col_types = "cn")
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(out)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - c(1,-1,-3,-5,-7,-9)
out  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
rep(-1,each = nsample)
rep(-1,each = nsample-1)
rep(-1,each = nsample-1) + 2
rep(-1,each = nsample-1) + 2
rep(-1,each = nsample-1) + 2
rep(-1,each = nsample-1)
rep(-1,each = nsample-1) -
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - seq(1,-9,by = -2)c(rep))-1,-3,-5,-7,-9)
seq(1,-9,by = -2
seq(1,-9,by = -2)
seq(1,-9,by = -2)
nsample * 2
nsample * 2 - 3
-(nsample * 2 - 3)
#Determining when the data actually starts, 13 rows down from sample name
data_start = which(col$start) - seq(1,-(nsample * 2 - 3),by = -2)
data  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(data)
out = tibble(sample_id,data)
#addding names
sample_id = rep(sample_names,each = 261)
out = tibble(sample_id,data)
View(out)
1*2
-3
1*2 - 3
-(nsample - 1 -2)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample
data_start = which(col$start) - seq(1,-(nsample - (1 -2)),by = -2)
seq(1,-(nsample - (1 -2)),by = -2)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample
data_start = which(col$start) - seq(1,-(nsample + (1 +2)),by = -2)
seq(1,-(nsample + (1 +2))
seq(1,-(nsample + (1 +2))
)
seq(1,-(nsample + (1 +2),by = -2)
seq(1,-(nsample + (1 +2)),by = -2)
seq(1,-(nsample + (1+2)),by = -2)
seq(1,-(1+ (1+2)),by = -2)
seq(1,-(2+ (1+2)),by = -2)
seq(1,-(nsample/2),by = -2)
seq(1,-(nsample/2),by = -2)
seq(1,-(nsample*2),by = -2)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:nsample-1]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[[1:nsample-1]]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[[1:(nsample-1)]]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:(nsample-1)]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:(nsample-1)]
data_start
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = (which(col$start) - seq(1,-(nsample*2),by = -2))[1:(nsample-1)]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)
seq(1,-(nsample*2),by = -2
)
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - (seq(1,-(nsample*2),by = -2))[[1:(nsample-1)]]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - (seq(1,-(nsample*2),by = -2))[1:(nsample-1)]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - (seq(1,-(nsample*2),by = -2))
seq(1,-(nsample*2),by = -2
seq(1,-(nsample*2),by = -2)
seq(1,-(nsample*2),by = -2))
seq(1,-(nsample*2),by = -2)
seq(1,-(nsample*2),by = -2)[1:nsample]
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:nsample]
data  = map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
View(data)
parse_nanodrop_curves = function(filepath){
#Reading in data
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col),
start = grepl("220.0.*",col))
#Determining how many samples there are
nsample = sum(col$check)
#Determining how many rows there are
nrow = nrow(col)
#Determining how many rows per sample there are
row_per_sample = nrow/nsample
#Determining the index of where the sample names are
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
#Preparing a vector of sample names
sample_names = col[indexes,1] %>%
dplyr::pull()
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:nsample]
data  = purrr::map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value"),col_types = "cn"))
#addding names
sample_id = rep(sample_names,each = 261)
out = tibble::tibble(sample_id,data)
return(out)
}
data = parse_nanodrop_curves("data/qiagen hMw DNA extraction strep.tsv")
View(data)
p1 = data %>%
ggplot(aes(wavelength,value))+
geom_line()+
facet_wrap(~sample_id) +
xlab("Wavelength")
p1
sapply(data,class)
parse_nanodrop_curves = function(filepath){
#Reading in data
col = readr::read_tsv(filepath,col_names = c("col")) %>%
dplyr::select(col = 1) %>%
dplyr::mutate(check =grepl(".*Absorbance.*",col),
start = grepl("220.0.*",col))
#Determining how many samples there are
nsample = sum(col$check)
#Determining how many rows there are
nrow = nrow(col)
#Determining how many rows per sample there are
row_per_sample = nrow/nsample
#Determining the index of where the sample names are
indexes = c(1,1:(nsample-1) * row_per_sample + 1)
#Preparing a vector of sample names
sample_names = col[indexes,1] %>%
dplyr::pull()
#Determining when the data actually starts, 13 rows down from sample name. shifts 2 down after every sample.
data_start = which(col$start) - seq(1,-(nsample*2),by = -2)[1:nsample]
data  = purrr::map_df(data_start,~readr::read_tsv(filepath,skip = .x, n_max = 261,col_names = c("wavelength","value")))
#addding names
sample_id = rep(sample_names,each = 261)
out = tibble::tibble(sample_id,data)
return(out)
}
data = parse_nanodrop_curves("data/qiagen hMw DNA extraction strep.tsv")
problems()
problems(data)
problems(data)
p1 = data %>%
ggplot(aes(wavelength,value))+
geom_line()+
facet_wrap(~sample_id) +
xlab("Wavelength")
p1
data = data %>%
mutate(sample_id=fct_relevel(Species,c("BLANK 1","0533_A 1","0533 B1","pDcom_1 1", "pDcom_2 1", "BLANK_2 1")))
data = data %>%
mutate(sample_id=fct_relevel(sample_id,c("BLANK 1","0533_A 1","0533 B1","pDcom_1 1", "pDcom_2 1", "BLANK_2 1")))
p1 = data %>%
ggplot(aes(wavelength,value))+
geom_line()+
facet_wrap(~sample_id) +
xlab("Wavelength")
p1
data = data %>%
mutate(sample_id=fct_relevel(sample_id,c("BLANK 1","0533_A 1","0533_B1","pDcom_1 1", "pDcom_2 1", "BLANK_2 1")))
p1 = data %>%
ggplot(aes(wavelength,value))+
geom_line()+
facet_wrap(~sample_id) +
xlab("Wavelength")
p1
data = data %>%
mutate(sample_id=fct_relevel(sample_id,c("BLANK 1","0533_A 1","0533_B 1","pDcom_1 1", "pDcom_2 1", "BLANK_2 1")))
p1 = data %>%
ggplot(aes(wavelength,value))+
geom_line()+
facet_wrap(~sample_id) +
xlab("Wavelength")
p1
DT::datatable(sum)
DT::datatable(sum)
#This is a huge pain in the ass because the encoding is all messed up.
sum = read_tsv("data/qiagen hMw DNA extraction strep.csv",locale = locale(encoding = "UTF-16")) %>% select(1:7)
DT::datatable(sum)
devtools::document()
library(GLabR)
